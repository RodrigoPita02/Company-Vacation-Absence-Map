const express = require('express');
const router = express.Router();
const db = require('../config/db');

// 游릭 Rota para listar funcion치rios com seus cargos
router.get('/', (req, res) => {
    const sql = `
        SELECT funcionarios.id, funcionarios.nome, cargos.nome AS cargo, cargos.cor
        FROM funcionarios
        LEFT JOIN cargos ON funcionarios.cargo_id = cargos.id
    `;
    db.query(sql, (err, results) => {
        if (err) {
            console.error("Erro ao buscar funcion치rios:", err);
            res.status(500).json({ error: "Erro ao buscar funcion치rios" });
        } else {
            res.json(results);
        }
    });
});

// 游릭 Rota para adicionar um funcion치rio
router.post('/', (req, res) => {
    const { nome, cargo_id } = req.body;

    if (!nome || !cargo_id) {
        return res.status(400).json({ error: "Todos os campos s칚o obrigat칩rios" });
    }

    const sql = "INSERT INTO funcionarios (nome, cargo_id) VALUES (?, ?)";
    db.query(sql, [nome, cargo_id], (err, result) => {
        if (err) {
            console.error("Erro ao adicionar funcion치rio:", err);
            res.status(500).json({ error: "Erro ao adicionar funcion치rio" });
        } else {
            res.status(201).json({ message: "Funcion치rio adicionado com sucesso", id: result.insertId });
        }
    });
});

// 游릭 Atualizar funcion치rio
router.put('/:id', (req, res) => {
    const { nome, cargo_id } = req.body;
    const { id } = req.params;

    if (!nome || !cargo_id) {
        return res.status(400).json({ error: "Nome e cargo s칚o obrigat칩rios" });
    }

    const sql = "UPDATE funcionarios SET nome = ?, cargo_id = ? WHERE id = ?";
    db.query(sql, [nome, cargo_id, id], (err, result) => {
        if (err) {
            console.error("Erro ao atualizar funcion치rio:", err);
            res.status(500).json({ error: "Erro ao atualizar funcion치rio" });
        } else {
            res.json({ message: "Funcion치rio atualizado com sucesso" });
        }
    });
});

// 游릭 Rota para excluir um funcion치rio
router.delete('/:id', (req, res) => {
    const { id } = req.params;

    const sql = "DELETE FROM funcionarios WHERE id = ?";
    db.query(sql, [id], (err) => {
        if (err) {
            console.error("Erro ao excluir funcion치rio:", err);
            res.status(500).json({ error: "Erro ao excluir funcion치rio" });
        } else {
            res.json({ message: "Funcion치rio exclu칤do com sucesso" });
        }
    });
});

// 游릭 Rota para listar cargos
router.get('/cargos', (req, res) => {
    const sql = "SELECT * FROM cargos";
    db.query(sql, (err, results) => {
        if (err) {
            console.error("Erro ao buscar cargos:", err);
            res.status(500).json({ error: "Erro ao buscar cargos" });
        } else {
            res.json(results);
        }
    });
});

module.exports = router;
